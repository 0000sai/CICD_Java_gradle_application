pipeline{
    agent any
    environment{
        VERSION = "${env.BUILD_ID}"
    }
    stages{
        stage("sonar qube analysis"){
            agent{
               docker {
                    image 'openjdk:11'
               }
            }
            steps{
               script{
                withSonarQubeEnv(credentialsId: 'sonar-token-test') {
                      sh '''
                      chmod +x gradlew
                      ./gradlew sonarqube
                      '''
                    }

                timeout(5) {
                     def qg = waitForQualityGate()
                      if (qg.status != 'OK') {
                           error "Pipeline aborted due to quality gate failure: ${qg.status}"
                      }
                    }
               }
            }
        }

       stage("building docker image and pushing it to nexus"){
           steps{
               script{

               withCredentials([string(credentialsId: 'nexus_pass', variable: 'docker_pass')]) {
                    sh '''

                   docker build -t 34.125.203.155:8083/springapp:${VERSION} .
                   docker login -u admin -p $docker_pass 34.125.203.155:8083
                  docker push  34.125.203.155:8083/springapp:${VERSION}
                  docker rmi 34.125.203.155:8083/springapp:${VERSION}        
                  '''
                    }
                }
              }
           }



    }
    
}
